#!/bin/bash
#
# [RClone Cache Role]
#
# GitHub:   https://github.com/Admin9705/PlexGuide.com-The-Awesome-Plex-Server
# Author:   Admin9705 & Deiteq & FlickerRate
# URL:      https://plexguide.com
#
# PlexGuide Copyright (C) 2018 PlexGuide.com
# Licensed under GNU General Public License v3.0 GPL-3 (in short)
#
#   You may copy, distribute and modify the software as long as you track
#   changes/dates in source files. Any modifications to our software
#   including (via compiler) GPL-licensed code must also be made available
#   under the GPL along with build & install instructions.
#
#################################################################################
---
  - include_role:
      name: variables

############# GDrive
#  - name: GDrive Check
#    stat:
#      path: /mnt/gdrive
#    register: gdrive
#
  - name: Create GDrive Folders
    file: "path={{item}} state=directory mode=0775 owner=1000 group=1000 recurse=true"
    with_items:
      - /mnt/gdrive
      - /mnt/gdrive/tv
      - /mnt/gdrive/movies
      - /mnt/gdrive/music
      - /mnt/gdrive/ebooks
    when: gdrive.stat.exists == False
    ignore_errors: yes


    ####

  - name: Check MOVE SCRIPT
    stat:
      path: "/opt/appdata/plexguide/move.sh"
    register: move_script
#    tags:
#      - encache

  - name: Install Move Service
    template:
      src: move_script.js2
      dest: /opt/appdata/plexguide/move.sh
      force: yes
#    tags:
#        - encache

########### Move Service
  - name: Check MOVE Service
    stat:
      path: "/etc/systemd/system/move.service"
    register: move
#    tags:
#      - encache

  - name: Stop If Move Service Running
    systemd: state=stopped name=move
    when: move.stat.exists
#    tags:
#      - encache

  - name: Install Move Service
    template:
      src: move.js2
      dest: /etc/systemd/system/move.service
      force: yes
    when: move.stat.exists == False
#    tags:
#      - encache

  - name: Daemon-Reload
    systemd: state=stopped name=move daemon_reload=yes enabled=no
#    tags:
#      - encache

  - name: Start Move
    systemd: state=started name=move enabled=yes
    when: move.stat.exists
#    tags:
#      - encache

########### Cache directory
  - name: Check Cache directory
    stat:
      path: "/mnt/cache"
    register: cache_dir

  - name: Create Cache directory
    file:
      path: "/mnt/.cache"
      state: directory
      owner: 1000
      group: 1000
      mode: 775
    when: cache_dir.stat.exists == False

  - name: Check Rcache DB & cache file directory
    stat:
      path: "/mnt/.rcache"
    register: rcacheDB_dir

  - name: Create Rcache DB & cache directory
    file:
      path: "/mnt/.rcache"
      state: directory
      owner: 1000
      group: 1000
      mode: 775
    when: rcacheDB_dir.stat.exists == False

########### Cache
#  - name: Stop If CACHE Service Running
#    systemd: state=stopped name=encache
#    ignore_errors: True

#  - name: Install CACHE Service
#    template:
#      src: encache.js2
#      dest: /etc/systemd/system/encache.service
#      force: yes


########### Encache Sync Script
#  - name: Check Encache Sync SCRIPT
#    stat:
#      path: "/opt/appdata/plexguide/encache.sh"
#    register: encache_script
#    tags:
#      - encache

#  - name: Install Encache Service
#    template:
#      src: encache_script.js2
#      dest: /opt/appdata/plexguide/encache.sh
#      force: yes
#    when: encache_script.stat.exists == False
#    tags:
#      - encache

########### Encrypted Cache
  - name: Check ENCACHE Service
    stat:
      path: "/etc/systemd/system/encache.service"
    register: encache
#    tags:
#      - encache

  - name: Stop If ENCACHE Service Running
    systemd: state=stopped name=encache
    ignore_errors: True
    when: encache.stat.exists
#    tags:
#      - encache

  - name: Install ENCACHE Service
    template:
      src: encache.js2
      dest: /etc/systemd/system/encache.service
      force: yes
    when: encache.stat.exists == False
#    tags:
#      - encache

  - name: Daemon-Reload
    systemd: state=stopped name=encache daemon_reload=yes enabled=no

  - name: Start ENCACHE
    systemd: state=started name=encache enabled=yes
    when: encache.stat.exists
#    tags:
#      - encache


########### UNIONFS
  - name: Check UNIONFS Service
    stat:
      path: "/etc/systemd/system/unionfs.service"
    register: unionfs
#    tags:
#      - encache

  - name: Stop If UNIONFS Service Running
    systemd: state=stopped name=unionfs
    when: unionfs.stat.exists
#    tags:
#      - encache

  - name: Install UNIONFS Service
    template:
      src: unionfs.js2
      dest: /etc/systemd/system/unionfs.service
      force: yes
#    tags:
#        - encache

  - name: Daemon-Reload
    systemd: state=stopped name=unionfs daemon_reload=yes enabled=no
#    tags:
#      - encache

  - name: Start UNIONFS
    systemd: state=started name=unionfs enabled=yes
    when: unionfs.stat.exists
#    tags:
#      - encache
